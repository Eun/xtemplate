// Code generated by generate_examples.go; DO NOT EDIT.
package xtemplate_test

import (
	"fmt"

	"github.com/Eun/xtemplate"
	"github.com/Eun/xtemplate/funcs"
)

func ExampleSlice_Append() {
	s, _ := xtemplate.QuickExecute(
		`{{ $sl := slice.NewStrings "Joe" }}
{{ slice.Append $sl "Alice" "Bob" }}`,
		nil,
		funcs.All,
	)
	fmt.Println(s) // Output: [Joe Alice Bob]
}

func ExampleSlice_Compact() {
	s, _ := xtemplate.QuickExecute(
		`{{ slice.Compact ( slice.NewStrings "Hello" "Hello" "World" "World" ) }}`,
		nil,
		funcs.All,
	)
	fmt.Println(s) // Output: [Hello World]
}

func ExampleSlice_Contains() {
	s, _ := xtemplate.QuickExecute(
		`{{ $sl := slice.NewStrings "Hello" "World" }}
{{ slice.Contains $sl "World" }}`,
		nil,
		funcs.All,
	)
	fmt.Println(s) // Output: true
}

func ExampleSlice_IsEmpty() {
	s, _ := xtemplate.QuickExecute(
		`{{ $sl := slice.NewStrings }}
{{ slice.IsEmpty $sl }}`,
		nil,
		funcs.All,
	)
	fmt.Println(s) // Output: true
}

func ExampleSlice_Len() {
	s, _ := xtemplate.QuickExecute(
		`{{ $sl := slice.NewStrings "Hello" "World" }}
{{ slice.Len $sl }}`,
		nil,
		funcs.All,
	)
	fmt.Println(s) // Output: 2
}

func ExampleSlice_Prepend() {
	s, _ := xtemplate.QuickExecute(
		`{{ $sl := slice.NewStrings "Joe" }}
{{ slice.Prepend $sl "Alice" "Bob" }}`,
		nil,
		funcs.All,
	)
	fmt.Println(s) // Output: [Alice Bob Joe]
}

func ExampleSlice_Reverse() {
	s, _ := xtemplate.QuickExecute(
		`{{ slice.Reverse ( slice.NewStrings "Hello" "World" ) }}`,
		nil,
		funcs.All,
	)
	fmt.Println(s) // Output: [World Hello]
}

func ExampleSlice_Sort() {
	s, _ := xtemplate.QuickExecute(
		`{{ slice.Sort ( slice.NewStrings "World" "Hello" ) }}`,
		nil,
		funcs.All,
	)
	fmt.Println(s) // Output: [Hello World]
}

func ExampleSlice_Unique() {
	s, _ := xtemplate.QuickExecute(
		`{{ slice.Unique ( slice.NewStrings "Hello" "World" "Hello" ) }}`,
		nil,
		funcs.All,
	)
	fmt.Println(s) // Output: [Hello World]
}

