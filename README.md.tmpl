{{- define "PrintSample" -}}
{{- $contents := conv.ToString ( os.ReadFile . ) -}}
{{- $contents := regexp.ReplaceAllString "func Example.*()" $contents "func main()" -}}
{{- $contents = strings.Replace $contents "package xtemplate_test" "package main" 1 -}}
{{- strings.TrimSpace $contents -}}
{{- end -}}
# xtemplate
[![Actions Status](https://github.com/Eun/xtemplate/workflows/push/badge.svg)](https://github.com/Eun/xtemplate/actions)
[![Coverage Status](https://coveralls.io/repos/github/Eun/xtemplate/badge.svg?branch=main)](https://coveralls.io/github/Eun/xtemplate?branch=main)
[![PkgGoDev](https://img.shields.io/badge/pkg.go.dev-reference-blue)](https://pkg.go.dev/github.com/Eun/xtemplate)
[![go-report](https://goreportcard.com/badge/github.com/Eun/xtemplate)](https://goreportcard.com/report/github.com/Eun/xtemplate)
---

A secure Go template engine with a restricted set of functions for safe template execution. **xtemplate** provides enhanced control over template functionality by allowing you to specify which functions are permitted, making it ideal for scenarios where you need to execute untrusted templates safely.

## Features

- üîí **Security-focused**: Restrict which functions can be used in templates
- üöÄ **Rich function library**: Includes functions for strings, paths, JSON, conversions, and more
- üéØ **Fine-grained control**: Allow entire namespaces or individual functions
- ‚ö° **Quick execution**: Simple API for common use cases
- üîÑ **Early return**: Special `return` function to short-circuit template execution
- üì¶ **Zero dependencies**: Built on Go's standard library

## Installation

```bash
go get github.com/Eun/xtemplate
```

## Quick Start

### Basic Usage

```go
{{ tmpl.Exec "PrintSample" "example_test.go" }}
```

### Quick Execute (One-liner)

For simple cases, use `QuickExecute`:

```go
{{ tmpl.Exec "PrintSample" "example_second_test.go" }}
```

## Available Function Namespaces

| Namespace  | Description               | Example Functions                                |
|------------|---------------------------|--------------------------------------------------|
| [strings](https://pkg.go.dev/github.com/Eun/xtemplate/Strings)  | String manipulation       | `ToLower`, `ToUpper`, `Replace`, `Split`, `Join` |
| [conv](https://pkg.go.dev/github.com/Eun/xtemplate/Conv)     | Type conversions          | `ToString`, `ToInt`, `ToBool`, `ToFloat64`       |
| [json](https://pkg.go.dev/github.com/Eun/xtemplate/Json)     | JSON operations           | `Marshal`, `Unmarshal`, `Valid`                  |
| [filepath](https://pkg.go.dev/github.com/Eun/xtemplate/Filepath) | File path operations      | `Join`, `Dir`, `Base`, `Ext`, `Clean`            |
| [path](https://pkg.go.dev/github.com/Eun/xtemplate/Path)     | URL path operations       | `Join`, `Dir`, `Base`, `Ext`, `Clean`            |
| [dict](https://pkg.go.dev/github.com/Eun/xtemplate/Dict)     | Dictionary/map operations | `New`, `HasKey`, `HasValue`, `Keys`              |
| [slice](https://pkg.go.dev/github.com/Eun/xtemplate/Slice)    | Slice operations          | `New`, `Sort`, `Reverse`, `Contains`             |
| [url](https://pkg.go.dev/github.com/Eun/xtemplate/Url)      | URL operations            | `JoinPath`, `QueryEscape`                        |
| [os](https://pkg.go.dev/github.com/Eun/xtemplate/Os)       | OS operations             | `Getenv`, `Hostname`, `UserHomeDir`              |
| [tmpl](https://pkg.go.dev/github.com/Eun/xtemplate/Tmpl)     | Template operations       | `Exec`                                           |
| [regexp](https://pkg.go.dev/github.com/Eun/xtemplate/Regexp)   | Regular expressions       | `Match`, `ReplaceAll`, `Split`                   |
| [cmp](https://pkg.go.dev/github.com/Eun/xtemplate/Cmp)      | Comparison operations     | `Or`                                             |

## Function Collections

Use predefined collections for common scenarios:

```go
import "github.com/Eun/xtemplate/funcs"

// Safe functions - recommended for untrusted templates
funcs.Safe

// All functions - use with caution
funcs.All

// Individual namespaces
funcs.Strings
funcs.Conv
funcs.JSON
// ... etc

// Individual functions
funcs.StringsToLower
funcs.URLJoinPath
funcs.OSGetenv
// ... etc
```

## Advanced Examples

### Data Processing Template

```go
{{ tmpl.Exec "PrintSample" "example_third_test.go" }}
```

### Early Return Example

Use the special `return` function to exit template execution early:

```go
{{ tmpl.Exec "PrintSample" "example_fourth_test.go" }}
```

### Template Inclusion

Define and include sub-templates:

```go
{{ tmpl.Exec "PrintSample" "example_fifth_test.go" }}
```

## Security Considerations

**xtemplate** is designed for secure template execution:

- ‚úÖ **Use `funcs.Safe`** for untrusted templates
- ‚úÖ **Whitelist specific functions** when you need more control
- ‚ö†Ô∏è **Be cautious with `funcs.All`** - includes potentially dangerous functions
- ‚ö†Ô∏è **OS functions** like `os.Getenv` can expose sensitive information
- ‚ö†Ô∏è **Template functions** like `tmpl.Execute` can lead to infinite recursion

### Safe vs All Functions

```go
// Safe for untrusted templates
funcs.Safe // Includes: strings, conv, json, filepath, path, dict, slice, url, tmpl, cmp

// Use with caution - includes OS functions and more
funcs.All // Includes everything, including os.Getenv, os.Hostname, etc.
```

## Error Handling

```go
result, err := xtemplate.QuickExecute(template, data, funcs.Safe)
if err != nil {
    // Handle parsing or execution errors
    var funcErr *xtemplate.FuncNotAllowedError
    if errors.As(err, &funcErr) {
        fmt.Printf("Function not allowed: %s.%s\n", funcErr.Func.Namespace, funcErr.Func.Name)
    }
}
```

## Complete Function List
See the [GoDoc](https://pkg.go.dev/github.com/Eun/xtemplate) for a complete list of available functions and their descriptions.

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

This project is licensed under the MIT License - see the LICENSE file for details.
